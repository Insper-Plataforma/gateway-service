{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gateway Service","text":"<p>O <code>gateway-service</code> \u00e9 o ponto de entrada para todos os microsservi\u00e7os da plataforma. Ele atua como um API Gateway com:</p> <ul> <li>Encaminhamento de requisi\u00e7\u00f5es (routing)</li> <li>Valida\u00e7\u00e3o de rotas seguras</li> <li>Autentica\u00e7\u00e3o de tokens via Auth Service</li> <li>Suporte a CORS</li> <li>Endpoint informativo (<code>/info</code>)</li> </ul>"},{"location":"#principais-responsabilidades","title":"Principais responsabilidades","text":"<ul> <li>Encaminhar requisi\u00e7\u00f5es com base nas rotas definidas no <code>application.yaml</code></li> <li>Validar se uma rota exige autentica\u00e7\u00e3o</li> <li>Consultar o <code>auth-service</code> para validar tokens JWT</li> <li>Repassar o <code>idAccount</code> no header para os microsservi\u00e7os internos</li> </ul>"},{"location":"#integracao-com-jenkins","title":"Integra\u00e7\u00e3o com Jenkins","text":"<p>Este projeto conta com um arquivo Jenkinsfile (na raiz do reposit\u00f3rio) que define uma pipeline de integra\u00e7\u00e3o cont\u00ednua para compilar automaticamente o m\u00f3dulo sempre que houver altera\u00e7\u00f5es no reposit\u00f3rio.</p>"},{"location":"#para-que-serve","title":"Para que serve?","text":"<ul> <li> <p>Compila\u00e7\u00e3o automatizada: toda altera\u00e7\u00e3o no reposit\u00f3rio dispara o build do Maven, detectando problemas de compila\u00e7\u00e3o antes do merge.</p> </li> <li> <p>Imagens Docker consistentes: gera e publica automaticamente imagens multiplataforma, facilitando o deploy em diferentes ambientes (x86_64 e ARM).</p> </li> <li> <p>Seguran\u00e7a das credenciais: utiliza credenciais armazenadas no Jenkins (identificador dockerhub-credential), evitando exposi\u00e7\u00e3o de senhas no c\u00f3digo.</p> </li> </ul> <p>Dessa forma, a integra\u00e7\u00e3o com Jenkins garante que o gateway-service esteja sempre compilando e empacotado corretamente, com uma imagem Docker pronta para ser implantada nos clusters de produ\u00e7\u00e3o ou QA.</p>"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"arquitetura/#estrutura-de-pastas","title":"Estrutura de Pastas","text":"<pre><code>src/main/java/store/gateway/\n\u251c\u2500\u2500 GatewayApplication.java # Classe principal\n\u251c\u2500\u2500 GatewayResource.java # Endpoint de status/sistema\n\u251c\u2500\u2500 security/\n\u2502 \u251c\u2500\u2500 AuthorizationFilter.java # Valida tokens e injeta idAccount\n\u2502 \u251c\u2500\u2500 CorsFilter.java # Libera CORS\n\u2502 \u251c\u2500\u2500 RouterValidator.java # Verifica se rota \u00e9 protegida\n\u2502 \u251c\u2500\u2500 TokenOut.java # Token recebido\n\u2502 \u2514\u2500\u2500 SolveOut.java # ID extra\u00eddo do token\n\u2514\u2500\u2500 resources/\n\u2502 \u2514\u2500\u2500 application.yaml # Configura\u00e7\u00f5es de ambiente\n</code></pre>"},{"location":"arquitetura/#requisicoes-seguras","title":"Requisi\u00e7\u00f5es seguras","text":"<p>O filtro <code>AuthorizationFilter</code>:</p> <ul> <li>Ignora rotas abertas (ex: <code>/auth/login</code>)</li> <li>Para rotas protegidas:</li> <li>Exige header <code>Authorization: Bearer &lt;token&gt;</code></li> <li>Envia o token para <code>auth-service</code> (<code>/auth/solve</code>)</li> <li>Se v\u00e1lido, adiciona <code>id-account</code> no header</li> </ul>"},{"location":"arquitetura/#encaminhamento-de-rotas","title":"Encaminhamento de rotas","text":"<p>As rotas est\u00e3o definidas no <code>application.yaml</code> usando <code>spring.cloud.gateway.routes</code>.</p> <p>Exemplo:</p> <pre><code>- id: account\n  uri: http://account:8080\n  predicates:\n    - Path=/account/**\n</code></pre>"},{"location":"filtros/","title":"Filtros Globais","text":""},{"location":"filtros/#authorizationfilter","title":"AuthorizationFilter","text":"<ul> <li>Filtro global para rotas seguras</li> <li>Verifica presen\u00e7a do header <code>Authorization</code></li> <li>Envia o token ao endpoint <code>/auth/solve</code> do <code>auth-service</code></li> <li>Em caso de sucesso, injeta <code>id-account</code> no header</li> </ul>"},{"location":"filtros/#routervalidator","title":"RouterValidator","text":"<p>Componente auxiliar que define quais rotas s\u00e3o p\u00fablicas.</p> <pre><code>List.of(\n  \"POST /auth/register\",\n  \"POST /auth/login\"\n)\n</code></pre>"},{"location":"filtros/#corsfilter","title":"CorsFilter","text":"<p>Libera chamadas de qualquer origem, permitindo integra\u00e7\u00e3o com front-end:</p> <pre><code>corsConfig.addAllowedOrigin(\"*\");\ncorsConfig.addAllowedHeader(\"*\");\ncorsConfig.addAllowedMethod(\"*\");\n</code></pre>"},{"location":"info/","title":"Endpoint <code>/info</code>","text":"<p>O endpoint <code>/info</code> fornece detalhes sobre o ambiente em que o gateway est\u00e1 rodando.</p>"},{"location":"info/#metodo","title":"M\u00e9todo","text":""},{"location":"info/#get-info","title":"GET <code>/info</code>","text":"<p>Retorna informa\u00e7\u00f5es sobre o ambiente do gateway.</p>"},{"location":"info/#retorno-exemplo","title":"Retorno (exemplo)","text":"<pre><code>{\n  \"hostname\": \"gateway-container\",\n  \"os.arch\": \"amd64\",\n  \"java.version\": \"17.0.9\",\n  \"java.vendor\": \"Eclipse Adoptium\",\n  ...\n}\n</code></pre>"},{"location":"setup/","title":"Setup e Execu\u00e7\u00e3o - Gateway Service","text":"<p>O <code>gateway-service</code> \u00e9 o ponto de entrada para todos os microsservi\u00e7os da plataforma. Ele atua como um API Gateway.</p>"},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Spring Boot</li> <li>Spring Cloud Gateway</li> <li>WebFlux</li> <li>Lombok</li> </ul>"},{"location":"setup/#dependencias-principais-pomxml","title":"Depend\u00eancias principais (<code>pom.xml</code>)","text":"<ul> <li><code>spring-boot-starter-webflux</code></li> <li><code>spring-cloud-starter-gateway</code></li> <li><code>spring-boot-starter-reactor-netty</code></li> <li><code>lombok</code></li> <li><code>webclient</code></li> </ul>"},{"location":"setup/#como-compilar","title":"Como compilar","text":"<pre><code>mvn clean package\n</code></pre>"},{"location":"setup/#seguranca","title":"Seguran\u00e7a","text":"<p>O servi\u00e7o depende do auth-service para validar tokens JWT: - Tokens inv\u00e1lidos s\u00e3o rejeitados com HTTP 401 - Tokens v\u00e1lidos adicionam id-account aos headers das requisi\u00e7\u00f5es internas</p>"}]}